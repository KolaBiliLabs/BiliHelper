name: Release Electron App

on:
  push:
    tags:
      - 'v*'

jobs:
  # Windows
  build-windows:
    name: Build for Windows
    runs-on: windows-latest
    steps:
      # 检出 Git 仓库
      - name: Check out git repository
        uses: actions/checkout@v4
      # 安装 Node.js
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
      # 安装 pnpm
      - name: Install pnpm
        run: npm install -g pnpm
      # 复制环境变量文件
      - name: Copy .env.example
        run: |
          if (-not (Test-Path .env)) {
            Copy-Item .env.example .env
          } else {
            Write-Host ".env file already exists. Skipping the copy step."
          }
      # 安装项目依赖
      - name: Install Dependencies
        run: pnpm install
      # 构建 Electron App
      - name: Build Electron App for Windows
        run: pnpm run build:win || true
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      # 上传构建产物
      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: ColaBiliHelper-Win
          if-no-files-found: ignore
          path: dist/*.*
      # 创建 GitHub Release
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          files: dist/*.*
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

  # Mac
  build-macos:
    name: Build for macOS
    runs-on: macos-latest
    steps:
      # 检出 Git 仓库
      - name: Check out git repository
        uses: actions/checkout@v4
      # 安装 Node.js
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      # 安装 pnpm
      - name: Install pnpm
        run: npm install -g pnpm
      # 复制环境变量文件
      - name: Copy .env.example
        run: |
          if [ ! -f .env ]; then
            cp .env.example .env
          else
            echo ".env file already exists. Skipping the copy step."
          fi
      # 安装项目依赖
      - name: Install Dependencies
        run: pnpm install
      # 构建 Electron App
      - name: Build Electron App for macOS
        run: pnpm run build:mac || true
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      # 上传构建产物
      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: ColaBiliHelper-Mac
          if-no-files-found: ignore
          path: dist/*.*
      # 创建 GitHub Release
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          files: dist/*.*
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
